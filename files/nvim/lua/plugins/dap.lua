return {
  enabled = false
}
-- local dap = require("dap")
-- local ui = require("dapui")
--
-- require("mason-nvim-dap").setup({
--   ensure_installed = { "node2" }
-- })
--
-- dap.set_log_level("INFO")
--
-- dap.configurations = {
--   javascript = {
--     {
--       type = 'node2';
--       name = 'Launch',
--       request = 'launch';
--       program = '${file}';
--       cwd = vim.fn.getcwd();
--       sourceMaps = true;
--       protocol = 'inspector';
--       console = 'integratedTerminal';
--     },
--     {
--       type = 'node2';
--       name = 'Attach',
--       request = 'attach';
--       program = '${file}';
--       cwd = vim.fn.getcwd();
--       sourceMaps = true;
--       protocol = 'inspector';
--       console = 'integratedTerminal';
--     },
--   }
-- };
--
-- dap.adapters.node2 = {
--   type = 'executable';
--   command = 'node',
--   args = { vim.fn.stdpath("data") .. '/mason/packages/node-debug2-adapter/out/src/nodeDebug.js' };
-- }
--
-- ui.setup({
--   icons = { expanded = "‚ñæ", collapsed = "‚ñ∏" },
--   mappings = {
--     open = "o",
--     remove = "d",
--     edit = "e",
--     repl = "r",
--     toggle = "t",
--   },
--   expand_lines = vim.fn.has("nvim-0.8"),
--   layouts = {
--     {
--       elements = {
--         "scopes",
--       },
--       size = 0.3,
--       position = "right"
--     },
--     {
--       elements = {
--         "repl",
--         "breakpoints"
--       },
--       size = 0.3,
--       position = "bottom",
--     },
--   },
--   floating = {
--     max_height = nil,
--     max_width = nil,
--     border = "single",
--     mappings = {
--       close = { "q", "<Esc>" },
--     },
--   },
--   windows = { indent = 1 },
--   render = {
--     max_type_length = nil,
--   },
-- })
--
-- vim.fn.sign_define('DapBreakpoint', { text = 'üêû' })
--
-- -- Start debugging session
-- vim.keymap.set("n", "<localleader>ds", function()
--   dap.continue()
--   ui.toggle({})
--   vim.api.nvim_feedkeys(vim.api.nvim_replace_termcodes("<C-w>=", false, true, true), "n", false) -- Spaces buffers evenly
-- end)
--
-- -- Set breakpoints, get variable values, step into/out of functions, etc.
-- vim.keymap.set("n", "<localleader>dl", require("dap.ui.widgets").hover)
-- vim.keymap.set("n", "<localleader>dc", dap.continue)
-- vim.keymap.set("n", "<localleader>db", dap.toggle_breakpoint)
-- vim.keymap.set("n", "<localleader>dn", dap.step_over)
-- vim.keymap.set("n", "<localleader>di", dap.step_into)
-- vim.keymap.set("n", "<localleader>do", dap.step_out)
-- vim.keymap.set("n", "<localleader>dC", function()
--   dap.clear_breakpoints()
--   require("notify")("Breakpoints cleared", "warn")
-- end)
--
-- -- Close debugger and clear breakpoints
-- vim.keymap.set("n", "<localleader>de", function()
--   dap.clear_breakpoints()
--   ui.toggle({})
--   dap.terminate()
--   vim.api.nvim_feedkeys(vim.api.nvim_replace_termcodes("<C-w>=", false, true, true), "n", false)
--   require("notify")("Debugger session ended", "warn")
-- end)
